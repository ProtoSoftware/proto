name: PR

on:
  pull_request:
    branches: [main]

jobs:
  # Label the pull request with its file changes
  Label:
    runs-on: ubuntu-latest
    steps:
      - name: Label PR
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          sync-labels: true

  # Post a deploy preview comment when the pull request is opened
  Opened:
    if: ${{ github.event.action == 'opened'}}
    runs-on: ubuntu-latest
    steps:
      - name: Greet First Time Contributor
        uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pr-message: "Thank you for your contribution! As you are a first time contributor, please ensure you have read the CONTRIBUTING guide to help make your PR the best it can be!"

      - name: Comment
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: | 
            Thank you for your pull request! If you have modified any source code, a preview build will be generated as long as all other tests pass. Please use this time to double check your changes for any typos, warnings or other problems that will need to be resolved. Ref: ${{ github.ref_name }} (ID): ${{ github.run_id }}) 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Check to see if an invalid file has been modified, if it has then fail.
  No-Invalid-Edits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate Edited Files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: "json"
          filters: |
            src:
              - 'proto.rb'

      - name: Post Comment on Invalid Changes
        if: steps.changes.outputs.src == 'true'
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: "A preview build was not generated as a security measure due to this pull request modifying files that cannot be modified via a pull request. Please review the contributing guide and revert these files for a build to be generated."
          comment_includes: "preview build"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail CI on Invalid Edit
        if: steps.changes.outputs.src == 'true'
        run: |
          echo "::error::Contains invalid file edits"
          exit 1

  # Check to see if any new dependency in this pull request is vulnerable.
  Dependency-Review:
    runs-on: ubuntu-latest
    needs: ["No-Invalid-Edits"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v1
        
      - name: Post Comment on Invalid Changes
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: "A preview build was not generated as a security measure due to this pull request containing insecure dependencies."
          comment_includes: "preview build"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # If all is good, create a preview build for the pull request if needed.
  Preview:
    runs-on: ubuntu-latest
    needs: ["Dependency-Review", "No-Invalid-Edits"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Calculate If Build Is Needed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: "json"
          filters: |
            src:
              - 'cmd/**'
              - 'backend/**'
              
      - name: Set up Go
        if: steps.changes.outputs.src == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1

      - name: Restore Build Cache
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Run GoReleaser
        if: steps.changes.outputs.src == 'true'
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: build --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Assets
        uses: actions/upload-artifact@v3
        with:
          path: |
            dist/proto*_*/*
            checksums.txt

      - name: Edit Comment (Success)
        if: steps.changes.outputs.src == 'true'
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ### Success! 
            A preview build was successfully generated for your this pull request and can be found below.
            
            **Always review the source code before executing it on your system, no matter where it comes from** 
            
            | ID                   | Download URL                                                                   |
            |----------------------|--------------------------------------------------------------------------------|
            | ${{ github.run_id }} |  https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} |

          comment_includes: "preview build"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Edit Comment (Failure)
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: "Deploy failed! Something went wrong while generating a preview build for this pull request."
          comment_includes: "preview build"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
